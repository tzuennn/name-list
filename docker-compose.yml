services:
  db:
    image: postgres:16-alpine
    container_name: db
    env_file: .env
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 3s
      timeout: 3s
      retries: 15
    networks:
      - appnet

  backend:
    build:
      context: ./backend
    image: namelist-backend:latest
    container_name: backend
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8000"
    networks:
      - appnet

  frontend:
    build:
      context: ./frontend
    image: namelist-frontend:latest
    container_name: frontend
    depends_on:
      - backend
    ports:
      - "8080:80"
    networks:
      - appnet

volumes:
  db-data:

networks:
  appnet:
    driver: bridge
